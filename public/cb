#!/usr/bin/env python
# filename: cb
# description: Create a backup of a file or directory, where the filename
#              of the backup is appended with the current timestamp.
# fileversion: 0.1.1.3
# date: 20130506
# author: Dayo Adewunmi
# email: jargonsummary@gmail.com
# license: GPLv3
# python version: 2.7.3

import os
import shutil
from sys import argv as userArgs
from time import strftime

def backupReport(backupname):
    """ Print the result of the backup operation. """
    print "Backup created: %s" %(backupname)

def createBackup(source):
    """ Create a backup of a file or directory, where the filename \
            of the backup is the filename of the source with the \
            current timestamp as filename suffix. """
    
    # Put together the filename suffix.
    backupsuffix = '_BACKUP' + strftime("%Y%m%d_%H%M%S")

    # Strip trailing slash on source directory name or else
    # os.path.basename() will return empty, and a backupname
    # will not be created.
    source = source.rstrip('/')
    backupname = os.path.basename(source) + backupsuffix
    
    # Get the destination directory.
    destinationdir = os.path.dirname(os.path.abspath(source))

    # Create the absolute path for the backup file.
    backupfile = destinationdir + '/' + backupname

    # Check of the source is a file, and if it is use shutil.copy2().
    if os.path.isfile(source):
        shutil.copy2(os.path.abspath(source), backupfile)
        backupReport(backupfile)
    # But if source is a directory, shutil.copytree().
    elif os.path.isdir(source):
        shutil.copytree(os.path.abspath(source), backupfile)
        backupReport(backupfile)
    else:
        print "cb: Error: \'%s\' File or directory not found." %(source)

def main():
    if len(userArgs) != 2:
        print "Usage: cb <source>"
    else:
        createBackup(userArgs[1])
    
if __name__ == "__main__":
    main()
